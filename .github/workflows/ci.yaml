# name: ci
# on: [push]
# jobs:
#   check-app:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v2 #pega os dados que acabou de subir e baixa na maquina ubunto (git checkout)
#     - uses: actions/setup-go@v2 #instala o go na maquina ubunto actions sao apenas repositorios
#       with:
#         go-version: '1.16' #versao do go
#     - run: go test #baixa as dependencias do go
#     - run: go run math.go #roda o arquivo math.go aslf
name: ci-golang
on:
  pull_request:
    branches:
      - develop
jobs:
  check-app:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ['1.16']
    steps:
    - uses: actions/checkout@v2 #pega os dados que acabou de subir e baixa na maquina ubunto (git checkout)
    - uses: actions/setup-go@v2 #instala o go na maquina ubunto actions sao apenas repositorios
      with:
        go-version: ${{ matrix.go }} #versao do go
    - run: go test #baixa as dependencias do go
    - run: go run math.go #roda o arquivo math.go aslf
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and Push
      id: docker_build # pegar o resultado dessa action e colocar em outro step
      uses: docker/build-push-action@v2
      with:
        push: false #para fazer o push e nao vamos usar
        tags: guuhworship/stdio:latest
        # build-args: #quando precisa de argumentos
        #   BASE_IMAGE: debian:buster-slim
